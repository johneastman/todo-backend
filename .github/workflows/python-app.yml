# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: todo
          MYSQL_USER: root
          MYSQL_PASSWORD: password
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Create test data
      run: |
        cat > .env << EOF
        DB_HOST=localhost
        DB_USER=root
        DB_PASSWORD=password
        DB_NAME=todo
        EOF

        cat > test.json << EOF
        {
          "listsJSON": [
            {
              "name": "A",
              "listType": "List",
              "defaultNewItemPosition": "bottom",
              "isSelected": false,
              "items": [
                {
                  "name": "1",
                  "notes": "this note is very important.",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": true
                },
                {
                  "name": "2",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                },
                {
                  "name": "3",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                },
                {
                  "name": "4",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                },
                {
                  "name": "5",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                }
              ],
              "isLocked": false
            },
            {
              "name": "B",
              "listType": "Shopping",
              "defaultNewItemPosition": "bottom",
              "isSelected": false,
              "items": [
                {
                  "name": "Groceries",
                  "notes": "we need food. we're very hungry. but we are also very POOR!\n\nnew line!",
                  "quantity": 3,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                }
              ],
              "isLocked": false
            },
            {
              "name": "C",
              "listType": "To-Do",
              "defaultNewItemPosition": "bottom",
              "isSelected": false,
              "items": [
                {
                  "name": "10",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                },
                {
                  "name": "12",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                },
                {
                  "name": "14",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": true
                },
                {
                  "name": "16",
                  "notes": "",
                  "quantity": 1,
                  "isComplete": false,
                  "isSelected": false,
                  "isLocked": false
                }
              ],
              "isLocked": false
            },
            {
              "name": "D",
              "listType": "Ordered To-Do",
              "defaultNewItemPosition": "bottom",
              "isSelected": false,
              "items": [],
              "isLocked": false
            }
          ],
          "settingsJSON": {
            "isDeveloperModeEnabled": false,
            "defaultListPosition": "bottom",
            "defaultListType": "List"
          }
        }
        EOF
    - name: Test with pytest
      run: |
        pytest
